package main

import (
	"context"
	"log"

	"github.com/iamseki/devices-api/src/handler"
	"github.com/iamseki/devices-api/src/repository"
	"github.com/labstack/echo/v4"
	"github.com/labstack/echo/v4/middleware"
	"github.com/sethvargo/go-envconfig"

	_ "github.com/iamseki/devices-api/docs" // docs is generated by Swag CLI, you have to import it.
	echoSwagger "github.com/swaggo/echo-swagger"
)

type APIConfig struct {
	DatabaseURI string `env:"DATABASE_URI, default=postgres://devices:devices@localhost:5432/devices?sslmode=disable"`
	Port        string `env:"PORT, default=8081"`
}

// @title Devices API
// @version 1.0
// @description This is a sample API to ESIM devices.

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @BasePath /
func main() {
	config := &APIConfig{}
	if err := envconfig.Process(context.Background(), config); err != nil {
		log.Fatal(err)
	}

	handle := handler.New(repository.New(config.DatabaseURI))

	e := echo.New()

	// Setup
	e.Use(middleware.Logger())
	// API documentation
	e.GET("/swagger/*", echoSwagger.WrapHandler)

	e.GET("/devices/:id", handle.GetDevice)
	e.DELETE("/devices/:id", handle.DeleteDevice)

	e.GET("/devices", handle.ListDevice)
	e.POST("/devices", handle.InsertDevice)
	e.PATCH("/devices/:id", handle.UpdateDevice)

	e.Logger.Fatal(e.Start(":" + config.Port))
}
